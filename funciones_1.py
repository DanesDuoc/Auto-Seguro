# -*- coding: utf-8 -*-
"""funciones_1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18L4cCf6tzjwZoMkNXkYm0TTiCSG2EdKc
"""

import numpy as np

vehiculos = []
def grabar(vehiculos):
  print("\n--- Grabar Vehículo ---\n")
  tipo = input("Tipo de vehículo:").upper()
  while True:
    patente = input("Ingresa la patente del vehículo (AA1000/BBBB10): ").upper()
    if len(patente) == 6 and (patente[:4].isalpha() and patente[4:].isdigit()) or (patente[:2].isalpha() and patente[2:].isdigit()):
      break
    else:
      print("No se cumple con el formato requerido")
  while True:
    marca = input("Ingresa la marca (entre 2 y 15 caracteres):").upper()
    if len(marca) >= 2 and len(marca) <= 15:
      break
    else:
      print("Cantidad de caracteres errónea")
  while True:
    precio = int(input("Precio del vehículo:"))
    if precio <= 5000000:
      print("El precio debe ser de al mayor a $5000000")
    else:
      break
  fecha_registro = input("Fecha de registro del vehículo (DD/MM/AAAA):")
  nombre_propietario = input("Ingresa el nombre del dueño (nombre y apellidos):").upper()
  multas = []
  while True:
    respuesta_multa = input("¿Agregar multa? (s/n):").strip().lower()
    if respuesta_multa == "n":
      break
    elif respuesta_multa == "s":
      monto_multa = int(input("Monto de la multa:"))
      fecha_multa = input("Fecha de la multa (DD/MM/AAAA):")
      multa = {"Monto": monto_multa, "Fecha": fecha_multa}
      multas.append(multa)
    else:
      print("Respuesta no válida. Ingresa S para agregar una multa o N para omitir.")
  vehiculo = {
      "Tipo": tipo,
      "Patente": patente,
      "Marca": marca,
      "Precio": precio,
      "Multas": multas,
      "Fecha Registro": fecha_registro,
      "Dueño": nombre_propietario
  }
  vehiculos.append(vehiculo)
  print("\n--- ¡Vehículo ingresado con éxito! ---")

def buscar(vehiculos):
  print("\n--- Buscar vehículo ---\n")
  while True:
    buscar_patente = input("Ingresa la patente del vehículo a buscar (AA1000/BBBB10): ").upper()
    if len(buscar_patente) == 6 and (buscar_patente[:4].isalpha() and buscar_patente[4:].isdigit()) or (buscar_patente[:2].isalpha() and buscar_patente[2:].isdigit()):
      encontrado = False
      for vehiculo in vehiculos:
        if vehiculo["Patente"] == buscar_patente:
          print("\nInformación del vehículo buscado:")
          for clave, valor in vehiculo.items():
            if clave == "Multas":
              print(f"-- {clave}: --")
              for multa in valor:
                print(f"Monto: {multa['Monto']}\nFecha: {multa['Fecha']}")
            else:
              print(f"{clave}: {valor}")
          encontrado = True
          break
      if not encontrado:
        print("Vehículo no encontrado.")
      break
    else:
      print("No se cumple con el formato requerido")

def imprimir_certificados(vehiculos):

  print("\n --- Imprimir certificados ---\n")
  while True:
    buscar_patente = input("Ingresa la patente del vehículo a buscar (AA1000/BBBB10): ").upper()
    if len(buscar_patente) == 6 and (buscar_patente[:4].isalpha() and buscar_patente[4:].isdigit()) or (buscar_patente[:2].isalpha() and buscar_patente[2:].isdigit()):
      encontrado = False
      for vehiculo in vehiculos:
        if vehiculo["Patente"] == buscar_patente:
          print(f"\nCertificados para la patente {vehiculo['Patente']} (Dueño: {vehiculo['Dueño']}):")
          emision_contaminantes = round(np.random.uniform(1500, 3500))
          print(f"Certificado de Emisión de Contaminantes: ${emision_contaminantes:}")
          anotaciones_vigentes = round(np.random.uniform(1500, 3500))
          print(f"Certificado de Anotaciones Vigentes: ${anotaciones_vigentes:}")
          multas = round(np.random.uniform(1500, 3500))
          print(f"Certificado de Multas: ${multas:}")
          encontrado = True
          break
      if not encontrado:
        print("Vehículo no encontrado.")

      respuesta = input("¿Desea buscar otro vehículo? (s/n): ").strip().lower()
      if respuesta == "n":
        break
    else:
      print("La patente no cumple con el formato requerido")

def salir():
  print("\n--- Saliendo del programa ---")
  print("\n¡Gracias por usar nuestro programa!")
  print("\nPrograma creado por: Daniel Bahamondes Tavernini")
  print("\nVersión del programa: 1.0")
  print("\n¡Hasta la próxima!")